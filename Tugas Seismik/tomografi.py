import numpy as np
import matplotlib.pyplot as plt
from numpy.linalg import inv

l = 100.7

v = np.array(([200,200,200,200],
   [200,3000,3000,200],
   [200,3000,3000,200],
   [200,200,200,200]))


t11 = l*v[0][0]+1*v[0][1]+l*v[0][2]+l*v[0][3]
t12 = 106.8*v[0][0]+35.6*v[0][1]+71.2*v[1][1]+106.8*v[1][2]+106.8*v[1][3]
t13 = 94.33*v[0][0]+23.5*v[0][1]+117.9*v[1][1]+47.3*v[1][2]+70.6*v[2][2]+117.9*v[2][3]
t21 = 1*v[1][0]+1*v[1][1]+1*v[1][2]+1*v[1][3]
t22 = 1*v[1][0]+1*v[1][1]+1*v[1][2]+1*v[1][3]
t23 = 1*v[1][0]+1*v[1][1]+1*v[2][1]+1*v[2][2]+1*v[2][3]
t31 = 1*v[2][0]+1*v[2][1]+1*v[1][1]+1*v[1][2]+1*v[1][3]
t32 = 1*v[2][0]+1*v[2][1]+1*v[2][2]+1*v[2][3]
t33 = 1*v[2][0]+1*v[2][1]+1*v[2][2]+1*v[2][3]
t41 = 1*v[3][0]+1*v[2][0]+1*v[2][1]+1*v[2][2]+1*v[1][2]+1*v[1][3]
t42 = 1*v[3][0]+1*v[3][1]+1*v[2][1]+1*v[2][2]+1*v[2][3]
t43 = 1*v[3][0]+1*v[3][1]+1*v[3][2]+1*v[3][3]

t = np.array(([t11,t12,t13,t21,t22,t23,t31,t32,t33,t41,t42,t43]))

print(v)
print(t)




G = np.zeros((len(t), 16))
G[0][0] = 100.7
G[0][1] = 100.7
G[0][2] = 100.7
G[0][3] = 100.7
G[1][0] = 106.8
G[1][1] = 35.6
G[1][5] = 71.2
G[1][6] = 106.8
G[1][7] = 106.8
G[2][0] = 94.33
G[2][4] = 23.5
G[2][5] = 117.9
G[2][6] = 47.3
G[2][10] = 70.6
G[2][11] = 117.9
G[3][4] = 100.8
G[3][5] = 100.7
G[3][6] = 100.7
G[3][7] = 100.8
G[4][4] = 100.7
G[4][5] = 100.8
G[4][6] = 100.7
G[4][7] = 100.8
G[5][4] = 100.8
G[5][5] = 35.6
G[5][9] = 71.2
G[5][10] = 100.7
G[5][11] = 100.8
G[6][5] = 71.2
G[6][6] = 100.8
G[6][7] = 100.7
G[6][8] = 100.7
G[6][9] = 35.6
G[7][8] = 100.8
G[7][9] = 100.8
G[7][10] = 100.7
G[7][11] = 100.7
G[8][8] = 100.8
G[8][9] = 100.7
G[8][10] = 100.7
G[8][11] = 100.8
G[9][6] = 71.2
G[9][7] = 100.7
G[9][8] = 35.6
G[9][9] = 100.8
G[9][10] = 50
G[9][12] = 100.7
G[10][9] = 71.2
G[10][10] = 100.8
G[10][11] = 100.8
G[10][12] = 100.7
G[10][13] = 35.6
G[11][12] = 100.7
G[11][13] = 100.7
G[11][14] = 100.8
G[11][15] = 100.8

Gtrans = G.transpose()
perkalian = np.dot(G,Gtrans)
invers = np.linalg.inv(perkalian)
print(invers)

gtransdikaliinvers = np.dot(Gtrans, invers)

hasilresize = t.reshape(12,1)
print(hasilresize.shape)

m = np.dot(gtransdikaliinvers, hasilresize)
print(m)

mbenar = 1/m

resizem = mbenar.reshape(4,4)
print(resizem)

x = np.arange(0, 5, 1)
y = np.arange(0, 5, 1)

fig, ax = plt.subplots()
im = ax.imshow(v, extent=[0, 4, 0, 4])
ax.pcolormesh(x, y, v)
ax.invert_yaxis()

fig, ax1 = plt.subplots()
im = ax1.imshow(resizem, extent=[0, 4, 0, 4])
ax1.pcolormesh(x, y, resizem)
ax1.invert_yaxis()
plt.show()